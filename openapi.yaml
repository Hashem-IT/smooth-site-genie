
openapi: 3.0.3
info:
  title: Delivery System API
  description: API for the delivery system application
  version: 1.0.0
servers:
  - url: 'https://paciqvncbykiobgxzqrf.supabase.co'
    description: Supabase Production Server
paths:
  /rest/v1/profiles:
    get:
      summary: Get User Profiles
      description: Retrieve user profile information
      parameters:
        - in: query
          name: select
          schema:
            type: string
          description: Select specific fields from profiles
        - in: query
          name: id
          schema:
            type: string
            format: uuid
          description: Filter by profile ID
        - in: header
          name: apikey
          required: true
          schema:
            type: string
          description: Supabase API Key
        - in: header
          name: authorization
          required: true
          schema:
            type: string
          description: Bearer token for authentication
      responses:
        '200':
          description: User profiles retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Profile'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          
  /rest/v1/orders:
    get:
      summary: Get Orders
      description: Retrieve order information
      parameters:
        - in: query
          name: select
          schema:
            type: string
          description: Select specific fields from orders
        - in: query
          name: order
          schema:
            type: string
          description: Order results by specific field
        - in: header
          name: apikey
          required: true
          schema:
            type: string
          description: Supabase API Key
        - in: header
          name: authorization
          required: true
          schema:
            type: string
          description: Bearer token for authentication
      responses:
        '200':
          description: Orders retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Order'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      summary: Create New Order
      description: Create a new delivery order
      parameters:
        - in: header
          name: apikey
          required: true
          schema:
            type: string
          description: Supabase API Key
        - in: header
          name: authorization
          required: true
          schema:
            type: string
          description: Bearer token for authentication
        - in: header
          name: content-type
          required: true
          schema:
            type: string
          description: Content type of request body (application/json)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderCreate'
      responses:
        '201':
          description: Order created successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    patch:
      summary: Update Order
      description: Update an existing order
      parameters:
        - in: query
          name: id
          required: true
          schema:
            type: string
            format: uuid
          description: ID of the order to update
        - in: header
          name: apikey
          required: true
          schema:
            type: string
          description: Supabase API Key
        - in: header
          name: authorization
          required: true
          schema:
            type: string
          description: Bearer token for authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderUpdate'
      responses:
        '200':
          description: Order updated successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          
  /rest/v1/chat_messages:
    get:
      summary: Get Chat Messages
      description: Retrieve chat messages for a specific conversation
      parameters:
        - in: query
          name: select
          schema:
            type: string
          description: Select specific fields from chat_messages
        - in: query
          name: order_id
          schema:
            type: string
            format: uuid
          description: Filter by order ID or specify 'is.null' for direct messages
        - in: query
          name: or
          schema:
            type: string
          description: Complex OR query for sender/recipient combinations
        - in: query
          name: order
          schema:
            type: string
          description: Order results by specific field (e.g. created_at.asc)
        - in: header
          name: apikey
          required: true
          schema:
            type: string
          description: Supabase API Key
        - in: header
          name: authorization
          required: true
          schema:
            type: string
          description: Bearer token for authentication
      responses:
        '200':
          description: Chat messages retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatMessage'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
    post:
      summary: Send Chat Message
      description: Send a new chat message
      parameters:
        - in: header
          name: apikey
          required: true
          schema:
            type: string
          description: Supabase API Key
        - in: header
          name: authorization
          required: true
          schema:
            type: string
          description: Bearer token for authentication
        - in: header
          name: content-type
          required: true
          schema:
            type: string
          description: Content type of request body (application/json)
        - in: header
          name: content-profile
          required: true
          schema:
            type: string
          description: Database profile (public)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatMessageCreate'
      responses:
        '201':
          description: Message sent successfully
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
          
components:
  schemas:
    Profile:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
        name:
          type: string
        role:
          type: string
          enum: [driver, business]
        created_at:
          type: string
          format: date-time
      required:
        - id
        - email
        - name
        - role
        - created_at
        
    Order:
      type: object
      properties:
        id:
          type: string
          format: uuid
        business_id:
          type: string
          format: uuid
        business_name:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
        weight:
          type: number
        size:
          type: string
        image_url:
          type: string
        status:
          type: string
          enum: [pending, booked, confirmed, delivered]
        driver_id:
          type: string
          format: uuid
          nullable: true
        driver_name:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        from_address:
          type: string
          nullable: true
        to_address:
          type: string
          nullable: true
        location_lat:
          type: number
          nullable: true
        location_lng:
          type: number
          nullable: true
      required:
        - id
        - business_id
        - business_name
        - name
        - description
        - price
        - weight
        - size
        - status
        - created_at
        
    OrderCreate:
      type: object
      properties:
        business_id:
          type: string
          format: uuid
        business_name:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: number
        weight:
          type: number
        size:
          type: string
        image_url:
          type: string
        from_address:
          type: string
        to_address:
          type: string
      required:
        - business_id
        - business_name
        - name
        - description
        - price
        - weight
        - size
        
    OrderUpdate:
      type: object
      properties:
        status:
          type: string
          enum: [pending, booked, confirmed, delivered]
        driver_id:
          type: string
          format: uuid
          nullable: true
        driver_name:
          type: string
          nullable: true
        location_lat:
          type: number
          nullable: true
        location_lng:
          type: number
          nullable: true
          
    ChatMessage:
      type: object
      properties:
        id:
          type: string
          format: uuid
        order_id:
          type: string
          format: uuid
          nullable: true
        sender_id:
          type: string
          format: uuid
        recipient_id:
          type: string
          format: uuid
          nullable: true
        message_text:
          type: string
        is_read:
          type: boolean
        created_at:
          type: string
          format: date-time
      required:
        - id
        - sender_id
        - message_text
        - created_at
        
    ChatMessageCreate:
      type: object
      properties:
        order_id:
          type: string
          format: uuid
          nullable: true
        sender_id:
          type: string
          format: uuid
        recipient_id:
          type: string
          format: uuid
          nullable: true
        message_text:
          type: string
      required:
        - sender_id
        - message_text

  securitySchemes:
    supabaseAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: Supabase JWT token
    supabaseKey:
      type: apiKey
      in: header
      name: apikey
      description: Supabase API key

security:
  - supabaseAuth: []
    supabaseKey: []
